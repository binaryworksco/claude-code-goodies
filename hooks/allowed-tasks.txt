# Claude Code Auto-Approval Patterns
# Place this in ~/.claude/hooks/allowed-tasks.txt
# Each line is a regex pattern that will be matched against tool inputs
# Lines starting with # are comments
# Lines starting with ! are exclusion patterns (checked for file operations)

# ============ TASK PATTERNS ============
# Matched against task titles
^Run tests.*
^Run unit tests.*
^Run integration tests.*
^Format code.*
^Install dependencies.*
^Build project.*
^Build the application.*
^Build the solution.*
^Generate documentation.*
^Update documentation.*
^Create README.*
^Set up.*
^Initialize.*
^Configure.*

# .NET specific tasks
^Create new .* project.*
^Add .* package.*
^Add NuGet package.*
^Install .* NuGet.*
^Update NuGet packages.*
^Restore NuGet packages.*
^Add project reference.*
^Create new class.*
^Create new controller.*
^Create new model.*
^Create new service.*
^Run dotnet.*
^Build .NET.*
^Test .NET.*
^Publish .NET.*
^Create migration.*
^Update database.*
^Scaffold.*

# ============ BASH COMMAND PATTERNS ============
# Safe npm/yarn/pnpm commands
^npm (install|test|run build|run dev|run start|list|outdated)
^yarn (install|test|build|dev|start|list|outdated)
^pnpm (install|test|build|dev|start|list|outdated)

# .NET/C# commands
^dotnet new (console|classlib|web|webapi|mvc|razor|blazor|grpc|worker|mstest|nunit|xunit|sln)
^dotnet add package
^dotnet add reference
^dotnet add .*\.csproj reference
^dotnet remove package
^dotnet remove reference
^dotnet restore
^dotnet build
^dotnet run
^dotnet test
^dotnet publish
^dotnet clean
^dotnet watch (run|test|build)
^dotnet tool (install|uninstall|list|update)
^dotnet nuget (push|delete|locals)
^dotnet sln (add|remove|list)
^dotnet list (package|reference)
^dotnet format
^dotnet ef (migrations add|database update|dbcontext scaffold)

# MSBuild commands
^msbuild
^msbuild .*\.(sln|csproj|vbproj|fsproj)
^msbuild /t:(Build|Rebuild|Clean|Restore|Pack|Publish)

# Python commands
^python -m pytest
^pytest
^python -m pip install -r requirements\.txt
^python -m venv
^python setup\.py

# Go commands
^go (test|fmt|build|get|mod tidy|mod download|run)

# Rust commands
^cargo (test|fmt|build|check|clippy|run)

# Git commands (read-only)
^git (status|log|diff|branch|show|remote -v)

# Formatters and linters
^prettier --write
^prettier --check
^eslint --fix
^eslint \.
^black \.
^ruff check
^gofmt -w

# Safe file operations
#^echo 
^ls 
^cat 
^pwd$
^cd 
^mkdir -p
^touch 
^head 
^tail 
^grep -r
^find .* -name
^tree
^which
^Glob$
^Grep$
^Read$
^WebFetch$
^TodoWrite$
^TodoRead$
^Update$
^Write$
^Edit$
^MultiEdit$


# Docker commands (read-only)
^docker ps
^docker images
^docker-compose ps

# Make commands
^make (test|build|clean|install)

# ============ FILE PATH PATTERNS ============
# For Write/Edit/MultiEdit operations

# Source code files
^src/.*\.(js|jsx|ts|tsx|py|go|rs|java|cpp|c|h|hpp|cs|vb|fs|fsx)$
^lib/.*\.(js|jsx|ts|tsx|py|go|rs|cs)$
^app/.*\.(js|jsx|ts|tsx|py|cs)$
^components/.*\.(js|jsx|ts|tsx)$
^pages/.*\.(js|jsx|ts|tsx)$

# .NET specific paths
^.*\.(cs|vb|fs|fsx)$
^.*\.(csproj|vbproj|fsproj|props|targets)$
^.*\.sln$
^Controllers/.*\.cs$
^Models/.*\.cs$
^Views/.*\.(cshtml|razor)$
^ViewModels/.*\.cs$
^Services/.*\.cs$
^Repositories/.*\.cs$
^Entities/.*\.cs$
^Infrastructure/.*\.cs$
^Program\.cs$
^Startup\.cs$
^appsettings\.json$
^appsettings\..*\.json$
^global\.json$
^nuget\.config$
^Directory\.Build\.props$
^Directory\.Build\.targets$

# Test files
^test/.*\.(js|ts|py|go|rs|cs)$
^tests/.*\.(js|ts|py|go|rs|cs)$
^__tests__/.*\.(js|ts)$
^.*\.test\.(js|ts|jsx|tsx|cs)$
^.*\.spec\.(js|ts|jsx|tsx)$
^.*_test\.(py|go|cs)$
^.*Test\.cs$
^.*Tests\.cs$
^.*\.Tests/.*\.cs$
^.*\.UnitTests/.*\.cs$
^.*\.IntegrationTests/.*\.cs$

# Documentation
^README\.md$
^readme\.md$
^docs/.*\.md$
^CONTRIBUTING\.md$
^CHANGELOG\.md$
^\.github/.*\.md$

# Configuration files
^package\.json$
^package-lock\.json$
^yarn\.lock$
^pnpm-lock\.yaml$
^tsconfig\.json$
^jest\.config\.(js|ts)$
^\.eslintrc\.(js|json|yml)$
^\.prettierrc\.(js|json|yml)$
^webpack\.config\.js$
^vite\.config\.(js|ts)$
^next\.config\.(js|ts)$
^\.github/workflows/.*\.(yml|yaml)$
^Dockerfile$
^\.dockerignore$
^docker-compose\.(yml|yaml)$
^Makefile$
^pyproject\.toml$
^requirements\.txt$
^go\.mod$
^go\.sum$
^Cargo\.toml$
^Cargo\.lock$
^\.editorconfig$
^\.gitignore$
^\.gitattributes$

# ============ EXCLUSION PATTERNS ============
# These paths will NEVER be auto-approved
!\.env
!\.env\..*
!\.git/
!\.ssh/
!/etc/
!/usr/
!/bin/
!/sbin/
!.*\.pem$
!.*\.key$
!.*\.cert$
!.*\.crt$
!.*credentials.*
!.*secret.*
!.*private.*
!.*password.*
!.*token.*
!.*\.sqlite$
!.*\.db$
!/home/.*/\.
!~/.
!prod/
!production/
